{"version":3,"sources":["images/personal-photo.jpg","sections/intro/intro.styles.js","components/fade-in/fade-in.styles.js","components/fade-in/index.js","components/fade-in/fade-in.js","components/emoji/index.js","components/emoji/emoji.js","sections/intro/index.js","sections/intro/intro.js","sections/about/about.styles.js","sections/about/info-section.styles.js","sections/about/info-section.js","sections/about/index.js","sections/about/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","typing","keyframes","_templateObject","blinkCaret","_templateObject2","Typewritter","styled","h1","_templateObject3","IntroContainer","div","_templateObject4","PersonalPhoto","img","_templateObject5","FadeInDiv","fade_in_styles_templateObject","_ref","isVisible","concat","FadeInSection","children","_useState","useState","_useState2","Object","slicedToArray","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","currentRef","current","observe","unobserve","react_default","a","createElement","ref","EmojiSpan","ariaLabel","className","role","aria-label","Intro","components_emoji","src","Photo","AboutContainer","about_styles_templateObject","AboutMeTitle","about_styles_templateObject2","AboutSection","about_styles_templateObject3","Section","info_section_styles_templateObject","SubSection","info_section_styles_templateObject2","InfoSectionTitle","h4","info_section_styles_templateObject3","SectionEmoji","info_section_styles_templateObject4","InfoSectionSubtitle","info_section_styles_templateObject5","ExperienceDuration","span","_templateObject6","ExperienceInfo","_templateObject7","InfoSection","title","sections","icon","formattedSections","map","section","experienceTitle","experienceDuration","experienceInfo","About","info_section","components_fade_in","App","sections_intro","sections_about","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7fb8edd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/personal-photo.d6f833d4.jpg\";","import styled, { keyframes } from 'styled-components';\n\nconst typing = keyframes`\n    0% {\n        width: 0;\n    }\n    100% {\n        width: 100%;\n    }\n`;\n\nconst blinkCaret = keyframes`\n    0% {\n        border-color: transparent;\n    }\n    50% {\n        border-color: #E6E6FA;\n    }\n    100% {\n        border-color: transparent;\n    }\n`;\n\nexport const Typewritter = styled.h1`\n    font-size: 36px;\n    overflow: hidden;\n    border-right: .15em solid #E6E6FA;\n    white-space: nowrap;\n    margin: 0 auto;\n    letter-spacing: .15em;\n    animation: \n        ${typing} 1s steps(40, end),\n        ${blinkCaret} .75s step-end infinite;\n`;\n\nexport const IntroContainer = styled.div`\n    width: 375px;\n    height: 650px;\n    margin-top: 150px;\n`;\n\nexport const PersonalPhoto = styled.img`\n    height: 300px;\n    margin-top: 80px;\n    border: 5px inset #48D1CC;\n    outline: 5px solid #AFEEEE;\n` ;","import styled from \"styled-components\";\n\nexport const FadeInDiv = styled.div`\n  transition: opacity 0.6s ease-out, transform 1.2s ease-out;\n  will-change: opacity, visibility;\n  ${({ isVisible }) => `\n        opacity: ${isVisible ? 1 : 0};\n        transform: ${isVisible ? \"none\" : \"translateY(20vh)\"};\n        visibility: ${isVisible ? \"visible\" : \"hidden\"};\n    `}\n`;\n","import FadeInSection from './fade-in';\n\nexport default FadeInSection;","import React, { useState, useRef, useEffect } from \"react\";\nimport { FadeInDiv } from \"./fade-in.styles\";\n\nconst FadeInSection = ({ children }) => {\n  const [isVisible, setVisible] = useState(true);\n  const domRef = useRef();\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => setVisible(entry.isIntersecting));\n    });\n    const currentRef = domRef.current;\n    observer.observe(currentRef);\n    return () => observer.unobserve(currentRef);\n  }, []);\n\n  return (\n    <FadeInDiv ref={domRef} isVisible={isVisible}>\n      {children}\n    </FadeInDiv>\n  );\n};\n\nexport default FadeInSection;\n","import EmojiSpan from './emoji';\n\nexport default EmojiSpan;","import React from \"react\";\n\nconst EmojiSpan = ({ ariaLabel, children, className }) => (\n  <span role=\"img\" aria-label={ariaLabel} className={className}>\n    {children}\n  </span>\n);\n\nexport default EmojiSpan;\n","import Intro from './intro';\n\nexport default Intro;","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { Typewritter, IntroContainer, PersonalPhoto } from \"./intro.styles\";\nimport Photo from '../../images/personal-photo.jpg';\nimport { EmojiSpan } from \"../../components\";\n\nconst Intro = () => (\n  <IntroContainer>\n    <Typewritter>\n      Hi, I'm Tammy. <EmojiSpan ariaLabel=\"Waving\">👋</EmojiSpan>\n    </Typewritter>\n    <PersonalPhoto src={Photo} />\n  </IntroContainer>\n);\n\nexport default Intro;\n","import styled from 'styled-components';\n\nexport const AboutContainer = styled.div`\n    width: 800px;\n    height: 600px;\n`;\n\nexport const AboutMeTitle = styled.h1`\n    font-size: 36px;\n    display: inline;\n    margin 0 15px;\n`;\n\nexport const AboutSection = styled.div`\n    width: 100%;\n    background: #FFFFFF;\n    border-radius: 5px;\n    margin: 30px 0;\n    text-align: left;\n    padding: 20px;\n`;","import styled from 'styled-components';\nimport { EmojiSpan } from \"../../components\";\n\nexport const Section = styled.div`\n    padding: 0px 15px 5px;\n    margin-top: 0;\n    color: #808080;\n`;\n\nexport const SubSection = styled.div`\n    margin: 6px;\n`;\n\nexport const InfoSectionTitle = styled.h4`\n    color: #008080;\n    line-height: 24px;\n    margin: 0;\n    font-weight: 400;\n    font-size: 24px;\n    display: inline;\n`;\n\nexport const SectionEmoji = styled(EmojiSpan)`\n    margin-right: 6px !important;\n`;\n\nexport const InfoSectionSubtitle = styled.p`\n    font-weight: bold;\n    margin: 0;\n`;\n\nexport const ExperienceDuration = styled.span`\n    font-size: 16px;\n`\n\nexport const ExperienceInfo = styled.p`\n    font-size: 12px;\n    margin-top: 4px;\n`","import React from \"react\";\nimport {\n  InfoSectionTitle,\n  Section,\n  SectionEmoji,\n  InfoSectionSubtitle,\n  ExperienceDuration,\n  ExperienceInfo,\n  SubSection\n} from \"./info-section.styles\";\n\nconst InfoSection = ({ title, sections, icon }) => {\n  const formattedSections = sections.map((section) => (\n    <SubSection>\n      <InfoSectionSubtitle>{section.experienceTitle}</InfoSectionSubtitle>\n      <ExperienceDuration>{section.experienceDuration}</ExperienceDuration>\n      <ExperienceInfo>{section.experienceInfo}</ExperienceInfo>\n    </SubSection>\n  ));\n\n  return (\n    <Section>\n      <SectionEmoji>{icon}</SectionEmoji>\n      <InfoSectionTitle>{title}</InfoSectionTitle>\n      {formattedSections}\n    </Section>\n  );\n};\n\n\nexport default InfoSection;\n","import About from './about';\n\nexport default About;","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { FadeInSection, EmojiSpan } from \"../../components\";\nimport { AboutContainer, AboutMeTitle, AboutSection } from \"./about.styles\";\nimport InfoSection from \"./info-section\";\n\nconst About = () => {\n  const sectionData = [\n    {\n      title: \"Experience\",\n      sections: [\n        {\n          experienceTitle: \"Software Application Developer | CNN\",\n          experienceDuration: \"Oct 2019 - Present\",\n          experienceInfo: \"Currently work on a team dedicated to discovering new potential products for CNN.com that increase relevance to users. Collaborate cross-functionally with design and QA to quickly develop and deploy new features to production. Contributed largely to user registration that was recently launched on CNN.com.\",\n        },\n        {\n            experienceTitle: \"Software Engineer | Honeywell\",\n            experienceDuration: \"Dec 2018 - Oct 2019\",\n            experienceInfo: \"Worked on a team that launched Honeywell's first APIaaS product for buildings technology. Contributed to service that connected internal APIs to API gateway and transformed data to be publicly consumed.\"\n        }\n      ],\n      icon: \"👩‍💻\",\n    },\n    {\n        title: \"Education\",\n        sections: [\n            {\n                experienceTitle: \"University of West Georgia | Bachelors of Computer Science\",\n                experienceDuration: \"Graduated Dec 2018 - Cum Laude\",\n                experienceInfo: \"President of Computer Science Honor Society, First President of ACM-W Chapter, GPA: 3.7\"\n            }\n        ],\n        icon: \"📚\"\n    }\n  ];\n\n  const sections = sectionData.map((section) => (\n    <InfoSection\n      title={section.title}\n      sections={section.sections}\n      icon={section.icon}\n    />\n  ));\n\n  return (\n    <AboutContainer>\n      <FadeInSection>\n        <EmojiSpan ariaLabel=\"Sparkle\">✨</EmojiSpan>\n        <AboutMeTitle>About Me</AboutMeTitle>\n        <EmojiSpan ariaLabel=\"Sparkle\">✨</EmojiSpan>\n        <AboutSection>{sections}</AboutSection>\n      </FadeInSection>\n    </AboutContainer>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport './App.css';\nimport { Intro, About } from './sections';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Intro/>\n        <About/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}